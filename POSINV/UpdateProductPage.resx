<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFilePicture.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOFpQQDhaUEq4WlBcuFpQabhaUE6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBCOFpQUrhaUGU4WlB3uFpQf/haUH/4WlB/+FpQezhaUEmAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADhaUEc4WlBZuFpQbDhaUH04WlB/+FpQf/haUH/4WlB/+FpQfzhaUH84WlB/+FpQdjhaUESAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBAuFp
        QTbhaUGC4WlBzOFpQfzhaUH/4WlB/+FpQf/haUH/4WlB8uFpQazhaUFi4WlBGOFpQWrhaUH/4WlB/+Fp
        Qb7haUEGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADhaUEC4WlBQuFp
        QZjhaUHk4WlB/+FpQf/haUH/4WlB/+FpQf/haUHc4WlBkOFpQUbhaUEGAAAAAAAAAAAAAAAAAAAAAOFp
        QZbhaUH/4WlB/+FpQZrhaUEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBEuFp
        QcDhaUH/4WlB/+FpQf/haUH/4WlB+uFpQcDhaUF24WlBKuFpQQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBBOFpQbzhaUH/4WlB/+FpQXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFp
        QQLhaUHC4WlB/+FpQf/haUHy4WlBquFpQVrhaUESAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4WlBEuFpQdrhaUH/4WlB+uFpQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBXuFpQf/haUH/4WlBmuFpQQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4WlBKOFpQe7haUH/4WlB7uFpQSoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADhaUG44WlB/+FpQdrhaUEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA4WlBEuFpQUbhaUEOAAAAAAAAAAAAAAAA4WlBSOFpQfrhaUH/4WlB2uFp
        QRIAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQeThaUH/4WlBmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOFpQQLhaUE04WlBfOFpQcThaUH64WlB/+FpQdDhaUEOAAAAAAAAAAAAAAAA4WlBbuFp
        Qf/haUH/4WlBvuFpQQYAAAAAAAAAAAAAAAAAAAAA4WlB5uFpQf/haUGQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA4WlBFOFpQVrhaUGi4WlB6OFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQbzhaUEGAAAAAAAA
        AADhaUEA4WlBmuFpQf/haUH/4WlBmAAAAAAAAAAAAAAAAAAAAADhaUHI4WlB/+FpQcbhaUEAAAAAAOFp
        QQThaUE44WlBgOFpQcjhaUH64WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        QaLhaUEAAAAAAAAAAADhaUEG4WlBvuFpQf/haUH/4WlBbAAAAAAAAAAAAAAAAOFpQZDhaUH/4WlB/+Fp
        QcjhaUG24WlB7uFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQYIAAAAAAAAAAAAAAADhaUEU4WlB3OFpQf/haUH64WlBRAAAAAAAAAAA4WlBPOFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQWIAAAAAAAAAAAAAAADhaUEs4WlB8OFpQf/haUHs4WlBJAAA
        AADhaUEA4WlBvuFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB+OFpQUQAAAAAAAAAAAAAAADhaUFO4WlB/OFp
        Qf/haUHU4WlBDgAAAADhaUEa4WlB4OFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB8OFpQSwAAAAAAAAAAAAA
        AADhaUF84WlB/+FpQf/haUGcAAAAAAAAAADhaUEq4WlB7OFpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB4OFp
        QRoAAAAAAAAAAOFpQQLhaUHm4WlB/+FpQbAAAAAAAAAAAAAAAADhaUE84WlB9uFpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlBzOFpQQwAAAAAAAAAAOFpQebhaUH/4WlBjAAAAAAAAAAAAAAAAAAAAADhaUFS4WlB+uFp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlBsuFpQQQAAAAA4WlB3OFpQf/haUGgAAAAAAAAAAAAAAAAAAAAAAAA
        AADhaUFq4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlBkgAAAADhaUGe4WlB/+FpQbgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADhaUGE4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB8OFpQbbhaUF84WlBSOFpQWThaUH24WlB/+FpQf/haUH/4WlBbuFpQRbhaUF44WlBJgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQQDhaUGe4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        QerhaUGs4WlBbuFpQTLhaUEEAAAAAAAAAAAAAAAAAAAAAOFpQV7haUH/4WlB/+FpQf/haUH64WlBTgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQQThaUG04WlB/+FpQf/haUH/4WlB8OFp
        QXLhaUEu4WlBAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQQbhaUE64WlBhuFpQf/haUH/4WlB/+Fp
        Qf/haUHy4WlBMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQQzhaUHI4WlB/+Fp
        Qf/haUHy4WlBKgAAAAAAAAAAAAAAAAAAAADhaUEI4WlBPOFpQXrhaUG44WlB8uFpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUHi4WlBGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFp
        QRThaUHY4WlB/+FpQf/haUHe4WlBRuFpQVDhaUGE4WlBwOFpQfThaUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUHCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAOFpQSLhaUHm4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQcQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQTDhaUHw4WlB/+FpQf/haUH/4WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB/+FpQf/haUH64WlBzOFpQZLhaUFY4WlBDgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQULhaUH24WlB/+FpQf/haUH/4WlB/+Fp
        Qf/haUH/4WlB/+FpQf/haUH/4WlB6uFpQbLhaUF64WlBQOFpQQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFpQVbhaUH84WlB/+Fp
        Qf/haUH/4WlB+uFpQc7haUGW4WlBXuFpQSbhaUEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOFp
        QVbhaUGm4WlBeOFpQUDhaUEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////3////A///+AH//4A4//wB+H/wH/x/4P/+P+P//x/H//+Px/+
        Hx8f4A8PHgAHjwAAA8eAAAPjgAAB8cAAAPjgAAB48AAAOPgAABj8AAAI/AAHD/4Af4f/B/8D/4f4Af/D
        AAD/4AAA//AAA//4AH///Af///7///////8=
</value>
  </data>
</root>